@page
@model Progetto.App.Pages.PaymentsModel
@{
    ViewData["Title"] = "Payment";
}

<h2><i class="fas fa-money-check"></i> <strong>@ViewData["Title"]</strong></h2>

<div class="container-fluid">
    <div class="row">
        <partial name="_DashboardPartial" />
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-dark text-white">
                    <h3 class="card-title mb-0 text-center">Charging Sessions</h3>
                </div>
                <div class="card-body">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Car Plate</th>
                                <th>Parking Slot</th>
                                <th>Start Charging Time</th>
                                <th>End Charging Time</th>
                                <th>Total Cost (€)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var charge in Model.CurrentCharges)
                            {
                                <tr>
                                    <form action="/api/CurrentlyCharging/payCharge" method="post">
                                    <td><input type="text" name="carPlate" value="@charge.CarPlate" readonly class="form-control" /></td>
                                    <td><input type="text" name="parkingSlotId" value="@charge.ParkingSlotId" readonly class="form-control" /></td>
                                    <td><input type="text" name="startChargingTime" value="@charge.StartChargingTime?.ToString("g")" readonly class="form-control" /></td>
                                    <td><input type="text" name="endChargingTime" value="@charge.EndChargingTime?.ToString("g")" readonly class="form-control" /></td>
                                    <td><input type="text" name="totalCost" value="@charge.TotalCost" readonly class="form-control" /></td>
                                    <input type="hidden" name="id" value="@charge.Id" readonly class="form-control" />
                                    <td>
                                        @if (charge.ToPay)
                                        {
                                            <button class="btn btn-success" onclick="handlePayment('@charge.CarPlate', @charge.TotalCost)">Pay Now</button>
                                        }
                                    </td>
                                    </form>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="card-body">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Car Plate</th>
                                <th>Parking Slot</th>
                                <th>Start Charging Time</th>
                                <th>End Charging Time</th>
                                <th>Total Cost (€)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var charge in Model.StopCharges)
                            {
                                <tr>
                                    <form action="/api/CurrentlyCharging/pay" method="post">
                                    <td><input type="text" name="carPlate" value="@charge.CarPlate" readonly class="form-control" /></td>
                                    <td><input type="text" name="parkingSlotId" value="@charge.ParkingSlotId" readonly class="form-control" /></td>
                                    <td><input type="text" name="startStopoverTime" value="@charge.StartStopoverTime?.ToString("g")" readonly class="form-control" /></td>
                                    <td><input type="text" name="endStopoverTime" value="@charge.EndStopoverTime?.ToString("g")" readonly class="form-control" /></td>
                                    <td><input type="text" name="totalCost" value="@charge.TotalCost" readonly class="form-control" /></td>
                                    <input type="hidden" name="id" value="@charge.Id" readonly class="form-control" />
                                    <td>
                                            @if (charge.ToPay)
                                            {


                                            <input class="btn btn-success" type="submit"
                                                   value="Pay Now" />
                                            }
                                    </td>
                                    </form>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>
        </main>
    </div>
</div>

<script>
    async function handlePayment(carPlate) {
        alert(`Hai pagato €${totalCost.toFixed(2)} con successo per l'auto con targa: ${carPlate}`);

        // TODO: mandare richiesta PUT all'endpoint /api/CurrentlyCharging/historicize

        // TODO: PayPal payment implementation
        // try {
        //     const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        //     const response = await fetch('/Payments?handler=PayNow', {
        //         method: 'POST',
        //         headers: {
        //             'Content-Type': 'application/json',
        //             'RequestVerificationToken': token
        //         },
        //         body: JSON.stringify(carPlate)
        //     });
        //     const result = await response.json();
        //     alert(result.message);
        // } catch (error) {
        //     console.error('Error:', error);
        //     alert('An error occurred during the payment process.');
        // }
    }
</script>
