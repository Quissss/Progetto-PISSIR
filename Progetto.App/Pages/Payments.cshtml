@page
@model Progetto.App.Pages.PaymentsModel
@{
    ViewData["Title"] = "Payment";
}

<h2><i class="fas fa-money-check"></i> <strong>@ViewData["Title"]</strong></h2>

<div class="container-fluid">
    <div class="row">
        <partial name="_DashboardPartial" />
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-dark text-white">
                    <h3 class="card-title mb-0 text-center">Charging Sessions</h3>
                </div>
                <div class="card-body">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Car Plate</th>
                                <th>Parking Slot</th>
                                <th>Start Charging Time</th>
                                <th>End Charging Time</th>
                                <th>Total Cost (€)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="currentChargesTable">
                        </tbody>
                    </table>
                </div>

                <div class="card-body">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Car Plate</th>
                                <th>Parking Slot</th>
                                <th>Start Charging Time</th>
                                <th>End Charging Time</th>
                                <th>Total Cost (€)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="stopChargesTable">
                        </tbody>
                    </table>
                </div>
            </div>
            <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>
        </main>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            loadCharges();
            loadStopovers();
        });

        async function loadCharges() {
            try {
                const response = await fetch('/api/currentlycharging/recharges');
                const charges = await response.json();
                const $tbody = $('#currentChargesTable');
                $tbody.empty();

                charges.forEach(charge => {
                    const $row = $('<tr>').html(`
                                <td>${charge.carPlate}</td>
                                <td>${charge.parkingSlotId}</td>
                                <td>${new Date(charge.startChargingTime).toLocaleString()}</td>
                                <td>${new Date(charge.endChargingTime).toLocaleString()}</td>
                                <td>${charge.totalCost}</td>
                                <td>
                                    ${charge.toPay ? `<button class="btn btn-success" onclick="handlePayment(${charge.id}, true)">Pay Now</button>` : ''}
                                </td>
                            `);
                    $tbody.append($row);
                });
            } catch (error) {
                console.error('Error loading charges:', error);
            }
        }

        async function loadStopovers() {
            try {
                const response = await fetch('/api/currentlycharging/stopovers');
                const stopovers = await response.json();
                const $tbody = $('#stopChargesTable');
                $tbody.empty();

                stopovers.forEach(stop => {
                    const $row = $('<tr>').html(`
                                <td>${stop.carPlate}</td>
                                <td>${stop.parkingSlotId}</td>
                                <td>${new Date(stop.startStopoverTime).toLocaleString()}</td>
                                <td>${new Date(stop.endStopoverTime).toLocaleString()}</td>
                                <td>${stop.totalCost}</td>
                                <td>
                                    ${stop.toPay ? `<button class="btn btn-success" onclick="handlePayment(${stop.id}, false)">Pay Now</button>` : ''}
                                </td>
                            `);
                    $tbody.append($row);
                });
            } catch (error) {
                console.error('Error loading stopovers:', error);
            }
        }

        async function handlePayment(id, isCharge) {
            const payload = { id: id, isCharge: isCharge };

            fetch('/api/payment/checkout', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.url) {
                        window.location.href = data.url;  // Effettua il redirect all'URL di PayPal
                    } else {
                        alert('Failed to initiate payment.');
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    alert('An error occurred during the payment process.');
                });
        }
    </script>
}
