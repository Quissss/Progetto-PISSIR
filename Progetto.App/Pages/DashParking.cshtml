@page
@model Progetto.App.Pages.DashParkingModel
@{
    ViewData["Title"] = "Dashboard parking";
}

<h2>@ViewData["Title"]</h2>

<div id="parkingGrid"></div>
@section Scripts {
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>
    <script>
        const url = "/api/ParkingSlot";
        const parkings = @Html.Raw(Json.Serialize(Model.Parkings.Select(p => new { value = p.Value, text = p.Text })));

        let ajax = function (item, verb, json = true) {
            return $.ajax({
                type: verb,
                url: url,
                data: json ? JSON.stringify(item) : item,
                dataType: "json",
                contentType: json ? "application/json" : "text/plain",
            });
        };

        $(function () {
            // Get the enum values for the statuses
            $.getJSON(url + "/statuses", function (statuses) {
                $("#parkingGrid").jsGrid({
                    width: "100%",
                    height: "400px",
                    autoload: true,
                    filtering: true,
                    inserting: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    controller: {
                        loadData: filter => ajax(filter, "GET", json = false),
                        updateItem: item => ajax(item, "PUT"),
                        insertItem: item => ajax(item, "POST"),
                        deleteItem: item => ajax(item, "DELETE"),
                    },
                    fields: [
                        { name: "number", type: "number", width: 50, title: "Slot Number " },
                        {
                            name: "parkingId", type: "select", width: 100, title: "Location", items: parkings, valueField: "value", textField: "text",
                            itemTemplate: function (value, item) {
                                let result = $.grep(parkings, function (parking) {
                                    return parking.value === value.toString();
                                });
                                return result.length ? result[0].text : value;
                            }
                        },
                        { name: "status", type: "select", items: statuses, width: 100, title: "Status", valueField: "id", textField: "name" },
                        {
                            type: "control",
                            editButton: true,
                            deleteButton: true,
                        }
                    ]
                });
            });
        });
    </script>
}
